name: Deploy to Fly.io

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [ main ]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: flyio-deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Ensure app exists and deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p logs
          : > logs/deploy.log
          APP_NAME=$(grep -m1 -E '^app\s*=\s*' fly.toml | awk -F '"' '{print $2}')
          echo "App from fly.toml: $APP_NAME"
          if ! flyctl status -a "$APP_NAME" >/dev/null 2>&1; then
            echo "App '$APP_NAME' not found in default org of token. Creating..."
            flyctl apps create "$APP_NAME"
            echo "App created."
          else
            echo "App '$APP_NAME' exists."
          fi
          # Deploy and capture logs (even on failure)
          set +e
          flyctl deploy -a "$APP_NAME" --remote-only --build-arg BUILDKIT_INLINE_CACHE=1 2>&1 | tee logs/deploy.log
          DEPLOY_EXIT=${PIPESTATUS[0]}
          set -e
          exit $DEPLOY_EXIT
      - name: Upload deploy logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deploy-logs
          path: logs/deploy.log
      - name: Post summary
        if: always()
        run: |
          {
            echo "## Fly.io Deployment";
            echo "";
            APP_NAME=$(grep -m1 -E '^app\s*=\s*' fly.toml | awk -F '"' '{print $2}' || true);
            echo "- App: ${APP_NAME:-see fly.toml}";
            echo "- Branch: $GITHUB_REF";
            echo "- Commit: $GITHUB_SHA";
            echo "";
            echo "Last 50 lines of deploy log:";
            echo '```';
            tail -n 50 logs/deploy.log || true;
            echo '```';
          } >> "$GITHUB_STEP_SUMMARY"
